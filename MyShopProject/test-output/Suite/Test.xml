<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="14" hostname="LAPTOP-2VHGMCO4" failures="0" tests="1" name="Test" time="0.048" errors="0" timestamp="2025-06-15T11:56:10 IST">
  <testcase classname="com.myshop.basepackage.BaseClass" name="@BeforeSuite loadConfig" time="0.078">
    <failure type="java.lang.IllegalArgumentException" message="InputStream cannot be null">
      <![CDATA[java.lang.IllegalArgumentException: InputStream cannot be null
at java.xml/javax.xml.parsers.DocumentBuilder.parse(DocumentBuilder.java:118)
at com.aventstack.extentreports.config.external.XmlConfigLoader.getConfigStore(XmlConfigLoader.java:61)
at com.aventstack.extentreports.config.external.XmlConfigLoader.apply(XmlConfigLoader.java:46)
at com.aventstack.extentreports.reporter.ExtentSparkReporter.loadXMLConfig(ExtentSparkReporter.java:96)
at com.aventstack.extentreports.reporter.ExtentSparkReporter.loadXMLConfig(ExtentSparkReporter.java:101)
at com.myshop.utility.ExtentManager.setExtent(ExtentManager.java:15)
at com.myshop.basepackage.BaseClass.loadConfig(BaseClass.java:30)
... Removed 17 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="com.myshop.testcases.EndtoEndTestcase" name="endToEndTest" time="0.0">
    <skipped/>
  </testcase> <!-- endToEndTest -->
  <testcase classname="com.myshop.basepackage.BaseClass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.myshop.basepackage.BaseClass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.myshop.basepackage.BaseClass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.myshop.basepackage.BaseClass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.myshop.basepackage.BaseClass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.myshop.basepackage.BaseClass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.myshop.basepackage.BaseClass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.myshop.basepackage.BaseClass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="com.myshop.basepackage.BaseClass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="com.myshop.basepackage.BaseClass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="com.myshop.basepackage.BaseClass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="com.myshop.basepackage.BaseClass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="com.myshop.basepackage.BaseClass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="com.myshop.basepackage.BaseClass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
</testsuite> <!-- Test -->
